---
- stat: path={{ mook_path }}/{{ mook_name }}/done
  register: st

####
# BACK END CONFIGURATION
####
- file: path={{ mook_path }}/{{ mook_name }}/api state=absent
  when: st.stat.exists == False

- name: Clone mook api
  become_user: ideascube
  git: repo=ssh://git@altssh.bitbucket.org:443/gryzzlab/mook-bsf-api.git dest={{ mook_path }}/{{ mook_name }}/api accept_hostkey=yes update=yes depth=1
  when: st.stat.exists == False

- name: Install python requierment
  pip: requirements=requirements.txt chdir={{ mook_path }}/{{ mook_name }}/api virtualenv_command=/usr/local/bin/virtualenv virtualenv={{ mook_path }}/{{ mook_name }}/api/env
  when: st.stat.exists == False

- name: Copy settings_local config files
  template: src=settings_local.py.j2 dest={{ mook_path }}/{{ mook_name }}/api/settings_local.py
  when: st.stat.exists == False

- name: Retrieve KoomBook info 
  set_fact: koombookName="{{ lookup('csvfile', 'id file=/etc/firstStart.csv delimiter=, col=3') }}" uuid="{{ lookup('csvfile', 'id file=/etc/firstStart.csv delimiter=, col=4') }}"
  when: st.stat.exists == False
  ignore_errors: yes
  
- name: add conf for KoomBook
  lineinfile: dest={{ mook_path }}/{{ mook_name }}/api/settings_local.py regexp='' insertafter=EOF line='    CENTRAL_SERVER_KEY = \"{{koombookName}}\" \n    CENTRAL_SERVER_SECRET = \"{{uuid}}\"' owner={{username}} group={{username}} mode=755
  when: st.stat.exists == False
  ignore_errors: yes
  
- name: Setup startup file for uwsgi
  copy: src=settings_central.py dest={{ mook_path }}/{{ mook_name }}/api owner={{username}} group={{username}} mode=755
  when: st.stat.exists == False

- name: Create tmp directory
  file: path=/media/hdd/{{ mook_name }}/static/tmp state=directory mode=0755 owner={{ username }} group={{ username }}
  when: st.stat.exists == False

####
# FRONT END CONFIGURATION
####
- file: path={{ mook_path }}/{{ mook_name }}/front state=absent
  when: st.stat.exists == False

- name: Clone mook front
  become_user: ideascube
  git: repo=ssh://git@altssh.bitbucket.org:443/gryzzlab/mook-bsf-front-end-backbone.git dest={{ mook_path }}/{{ mook_name }}/front accept_hostkey=yes update=yes depth=1
  when: st.stat.exists == False

- name: download vendor package
  get_url: url={{filer_bsf}}/vendor.tgz dest=/tmp/vendor.tgz
  when: st.stat.exists == False

- name: unarchive the vendor package
  become_user: ideascube
  unarchive: src=/tmp/vendor.tgz dest={{ mook_path }}/{{ mook_name }}/front copy=no
  when: st.stat.exists == False

- name: Copy config.js config files
  become_user: ideascube
  template: src=config.js.j2 dest={{ mook_path }}/{{ mook_name }}/front/config.js
  when: st.stat.exists == False

- name: Fix rights
  file: path={{ mook_path }}/{{ mook_name }} state=directory owner={{ username }} group={{ username }} recurse=yes
  when: st.stat.exists == False

- name: Copy uwsgi config files
  template: src=uwsgi-api.ini.j2 dest={{ mook_path }}/{{ mook_name }}/api/uwsgi-api.ini
  notify: restart uwsgi
  when: st.stat.exists == False

- file: path={{ mook_path }}/{{ mook_name }}/done state=touch
  when: st.stat.exists == False

- name: Fix rights on static
  file: path=/media/hdd/bsfcampus/ state=directory owner={{ username }} group={{ username }} recurse=yes

- name: Start to sync database
  command: su {{ username }} -c \'{{ mook_path }}/{{ mook_name }}/api/env/bin/python2.7 {{ mook_path }}/{{ mook_name }}/api/manage.py sync reset

- name: Sleep for 10min and shutdown
  sleep: 600

- tasks:
  include: ../../../post_tasks.yml task=updateMook version=1
  when: st.stat.exists == False

# - command: /sbin/reboot
#   when: st.stat.exists == False