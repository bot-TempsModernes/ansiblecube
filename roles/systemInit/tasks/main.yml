---
- name: Update packages list
  apt: update_cache=yes cache_valid_time=3600

- name: Install all requiered package
  apt: name={{ item }} state=latest
  with_items:
   - python-pip
   - python-dev
   - python-setuptools
   - git
   - sudo
   - vim
   - lsb-release
   - vim
   - locate
   - git
   - unzip
   - bash-completion
   - aptitude
   - sslh
   - ntpdate
   - fake-hwclock
   - network-manager

- name: Install ansible
  pip: name=ansible

- name: Upgrade packages
  apt: upgrade=safe

- name: Create an ideascube user on the system
  user: name={{ username }}
        shell=/bin/bash
        groups="sudo,www-data"
        home="/home/{{ username }}"
        generate_ssh_key=yes
        ssh_key_bits=2048
        ssh_key_file=.ssh/id_rsa
        password={{ password }}

- name: Copy SSHL config file
  copy: src=sslh dest=/etc/default/sslh owner=root group=root mode=0644 backup=yes
  notify: update sslh

- name: Copy .bashrc for root
  copy: src=bashrc dest=/root/.bashrc owner=root

- name: Copy vimrc for root
  copy: src=vim dest=/etc/vim/vimrc owner=root

- name: Copy .bashrc for new username
  copy: src=bashrc dest=/home/{{ username }}/.bashrc owner={{ username }}

- name: Add hdparm to save energy
  lineinfile: dest=/etc/hdparm.conf
              regexp=''
              insertafter=EOF
              line='/dev/sda {
                      spindown_time = 280
              }'
  when: (ansible_architecture == "armhf" or ansible_architecture == "armv7l") and use_hdd

- name: fake-hwclock conf for ARM system 
  copy: content="FORCE=force" dest=/etc/default/fake-hwclock
  when: ansible_architecture == "armhf" or ansible_architecture == "armv7l"

- name: Copy fex.file
  template: src=lime2.fex.j2 dest=/boot/bin/lime2.fex
  when: ansible_architecture == "armv7l"

- name: Build binary from fex
  shell: /usr/local/bin/fex2bin lime2.fex > lime2.bin chdir=/boot/bin/
  when: ansible_architecture == "armv7l"

- name: Copy visudo file for ideascube user
  template: src=visudo.j2 dest=/etc/sudoers.d/shutdown owner=root group=root mode=0440 validate="/usr/sbin/visudo -cf %s" 

- hostname: name={{ hostname }}

- name: Copy patch U-Boot package
  get_url: url={{filer_bsf}}/linux-u-boot-lime2_4.3_armhf.deb dest=/tmp/linuxUboot.deb owner=root group=root mode=755
  when: ansible_architecture == "armv7l"

- name: install patch U-Boot package
  apt:  deb=/tmp/linuxUboot.deb
  when: ansible_architecture == "armv7l"

- file: path=/media/hdd state=directory
  when: use_hdd

- name: Define a var to test if /dev/sda1 exist
  stat: path=/dev/sda1
  when: use_hdd
  register: hdd

- name: Mount /dev/sda1
  mount: name=/media/hdd/ src=/dev/sda1 fstype=ext4 state=mounted opts=noatime
  when: hdd.stat.isblk is defined and use_hdd

- name: Mount /dev/sda
  mount: name=/media/hdd/ src=/dev/sda fstype=ext4 state=mounted opts=noatime
  when: hdd.stat.isblk is defined and hdd.stat.isblk == False and use_hdd

- name: Create local directory to work from
  file: path=/var/lib/ansible/local state=directory owner=root group=root mode=0751

- name: Create ansible hosts directory to work from
  file: path=/etc/ansible/ state=directory owner=root group=root mode=0751

- name: Copy ansible inventory file to client
  copy: src=hosts dest=/etc/ansible/hosts
          owner=root group=root mode=0644

- name: Create entry to clone/pull git repository
  copy: src=dhclient-exit-hooks dest=/etc/dhcp/dhclient-exit-hooks.d/ansiblePullUpdate owner=root group=root mode=0755

- name: List services to restart (1/2)
  shell: checkrestart | grep ^service | awk '{print $2}'
  register: services
  changed_when: False
  