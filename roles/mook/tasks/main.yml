---
- name: Install specific packages
  apt: name={{ item }} state=latest
  with_items:
    - python-pip
    - python-dev
    - python-pkg-resources
    - unzip
    - libffi6
    - libffi-dev

- name: Installe virtualenv
  pip: name=virtualenv

####
# BACK END CONFIGURATION
####
- name: Clone mook api
  become_user: ideascube
  git: repo=ssh://git@altssh.bitbucket.org:443/gryzzlab/mook-bsf-api.git dest={{ mook_path }}/{{ mook_name }}/api accept_hostkey=yes
  register: mook

- name: Update setuptools
  pip: name=setuptools extra_args="-U"
  when: mook.changed

- name: Install python requierment
  pip: requirements=requirements.txt chdir={{ mook_path }}/{{ mook_name }}/api virtualenv_command=/usr/local/bin/virtualenv virtualenv={{ mook_path }}/{{ mook_name }}/api/env
  when: mook.changed

- name: Create static dir
  file: path={{ mook_path }}/{{ mook_name }}/static state=directory owner={{username}} group={{username}} mode=0775
  when: mook.changed

- name: Copy settings_local config files
  template: src=settings_local.py.j2 dest={{ mook_path }}/{{ mook_name }}/api/settings_local.py
  when: mook.changed

- name: Retrieve KoomBook info 
  set_fact: koombookName="{{ lookup('csvfile', 'id file=/etc/firstStart.csv delimiter=, col=5') }}" uuid="{{ lookup('csvfile', 'id file=/etc/firstStart.csv delimiter=, col=6') }}"
  when: mook.changed
  ignore_errors: yes
  
- name: add conf for KoomBook
  lineinfile: dest={{ mook_path }}/{{ mook_name }}/api/settings_local.py regexp='' insertafter=EOF line='    CENTRAL_SERVER_KEY = \"{{koombookName}}\" \n    CENTRAL_SERVER_SECRET = \"{{uuid}}\"' owner={{username}} group={{username}} mode=755
  when: mook.changed
  ignore_errors: yes
  
- name: Setup startup file for uwsgi
  copy: src=settings_central.py dest={{ mook_path }}/{{ mook_name }}/api owner={{username}} group={{username}} mode=755
  when: mook.changed

####
# INIT SCRIPT
####

- name: add a new string before the match
  lineinfile: dest=/etc/rc.local
              regexp='^By'
              insertbefore='^# By'
              line="su {{ username }} -c \'{{ mook_path }}/{{ mook_name }}/api/env/bin/python2.7 {{ mook_path }}/{{ mook_name }}/api/manage.py sync -D\' > /dev/null 2>&1"
  when: mook.changed

####
# FRONT END CONFIGURATION
####
- name: Clone mook front
  become_user: ideascube
  git: repo=ssh://git@altssh.bitbucket.org:443/gryzzlab/mook-bsf-front-end-backbone.git dest={{ mook_path }}/{{ mook_name }}/front accept_hostkey=yes
  register: mookFront

- name: download vendor package
  get_url: url={{filer_bsf}}/vendor.tgz dest=/tmp/vendor.tgz
  when: mookFront.changed

- name: unarchive the vendor package
  become_user: ideascube
  unarchive: src=/tmp/vendor.tgz dest={{ mook_path }}/{{ mook_name }}/front copy=no
  when: mookFront.changed

- name: Copy config.js config files
  become_user: ideascube
  template: src=config.js.j2 dest={{ mook_path }}/{{ mook_name }}/front/config.js
  when: mookFront.changed

- name: Fix rights
  file: path={{ mook_path }}/{{ mook_name }} state=directory owner={{ username }} group={{ username }} recurse=yes

####
# NGINX CONFIGURATION
####

- name: Copy vhost
  template: src=vhost.j2 dest=/etc/nginx/sites-available/{{ mook_name }}
  register: vhost
  when: mook.changed

- name: Copy api vhost
  template: src=vhost-api.j2 dest=/etc/nginx/sites-available/{{ mook_name }}-api
  when: mook.changed
  register: vhost

- name: bsf campus enable Virtual host
  file: src=/etc/nginx/sites-available/{{ mook_name }} dest=/etc/nginx/sites-enabled/{{ mook_name }} state=link
  when: vhost.changed and mook.changed

- name: bsf campus api enable Virtual host
  file: src=/etc/nginx/sites-available/{{ mook_name }}-api dest=/etc/nginx/sites-enabled/{{ mook_name }}-api state=link
  when: vhost.changed and mook.changed
  notify: restart nginx

####
# UWSGI CONFIGURATION
####

- name: Copy uwsgi config files
  template: src=uwsgi-api.ini.j2 dest={{ mook_path }}/{{ mook_name }}/api/uwsgi-api.ini
  when: mook.changed

- name: Symbolic link for wsgi ini file
  file: src={{ mook_path }}/{{ mook_name }}/api/uwsgi-api.ini dest=/etc/uwsgi/apps-enabled/uwsgi-{{ mook_name }}-api.ini state=link
  notify: restart uwsgi
  when: mook.changed

- tasks:
  include: ../../../post_tasks.yml task=mook version=1
  when: mook.changed or mookFront.changed
  