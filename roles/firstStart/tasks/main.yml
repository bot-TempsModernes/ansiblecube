---
- stat: path=/etc/firstStart.csv
  register: st

- set_fact: date="{{ ansible_date_time["date"]}}" time="{{ ansible_date_time["time"]}}"

- set_fact: ideascubeName="{{ ideascube_id }}_{{ 1000 | random }}" UUID="{{ ansible_default_ipv4["macaddress"] | hash('md5') }}"
  when: st.stat.exists == False

- hostname: name={{ ideascubeName |replace("_", "-") }}
  when: st.stat.exists == False

- lineinfile: dest=/etc/hosts regexp='^127.0.0.1' insertafter='127.0.0.1' line='127.0.0.1 localhost {{ ideascubeName }} {{ ideascubeName |replace("_", "-") }}' owner=root group=root mode=0644
  when: st.stat.exists == False

- shell: wget -qO- http://ipecho.net/plain ; echo
  register: public_ip
  when: st.stat.exists == False

- copy: content=id,{{ date }},{{ time }},{{ ideascubeName }},{{ UUID }},{{ ansible_default_ipv4["macaddress"] }},{{ ansible_default_ipv4["address"] }},{{ public_ip.stdout }}\n dest=/etc/firstStart.csv
  when: st.stat.exists == False

- raw: cat /etc/firstStart.csv | ssh -p 443 {{ central_server }} "cat >> ./ansible/UUID/firstStart.csv"
  when: st.stat.exists == False

- lineinfile: dest=/etc/network/interfaces regexp='wpa' state=absent
  when: st.stat.exists == False

- file: path=/etc/localtime state=absent
  when: st.stat.exists == False

- name: set /etc/localtime
  file: src=/usr/share/zoneinfo/{{ timezone }} dest=/etc/localtime state=link
  when: st.stat.exists == False

- name: Set timezone variables
  copy: content={{ timezone }} dest=/etc/timezone owner=root group=root mode=0644 backup=yes
  notify: update timezone
  when: st.stat.exists == False

- name: Set ansible pull for the right project
  replace: dest=/etc/dhcp/dhclient-exit-hooks.d/ansiblePullUpdate regexp='initPullUpdate.yml' replace='update_{{ ideascube_id }}.yml' backup=yes
  when: st.stat.exists == False
  ignore_errors: yes

# - command: /sbin/shutdown -h now
#   when: st.stat.exists == False
