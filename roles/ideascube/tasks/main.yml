---
# For ARM
# - name: Check if package exist
#   stat: path=/tmp/ideascube_{{ version }}_armhf.deb
#   register: st
#   when: ansible_architecture == 'armhf' or ansible_architecture == 'armv7l'

- name: Create storage dir for ideascube
  file: path=/media/hdd/ideascube/storage state=directory owner=www-data group=www-data
  when: ansible_architecture == 'armhf' or ansible_architecture == 'armv7l'

- name: Copy ideascube package
  get_url: url={{filer_bsf}}/ideascube_{{ version }}_armhf.deb dest=/tmp/ideascube_{{ version }}_armhf.deb owner=root group=root mode=755
  when: ansible_architecture == "armhf" or ansible_architecture == "armv7l"

- name: install ideascube package
  apt: deb=/tmp/ideascube_{{ version }}_armhf.deb
  when: ansible_architecture == "armhf" or ansible_architecture == "armv7l"

# For AMD64
# - name: Check if package exist
#   stat: path=/tmp/ideascube_{{ version }}_amd64.deb
#   register: st
#   when: ansible_architecture == 'x86_64'

- name: Copy ideascube package
  get_url: url={{filer_bsf}}/ideascube_{{ version }}_amd64.deb dest=/tmp/ideascube_{{ version }}_amd64.deb owner=root group=root mode=755
  when: ansible_architecture == 'x86_64'

- name: install ideascube package
  apt: deb=/tmp/ideascube_{{ version }}_amd64.deb
  when: ansible_architecture == 'x86_64'

- name: Add IDEASCUBE_ID
  lineinfile: dest=/etc/default/ideascube
              regexp='^'
              line='IDEASCUBE_ID={{ ideascube_id }}'
              state=present

- lineinfile: dest=/etc/nginx/sites-available/ideascube regexp='443' state=absent
  notify: restart nginx

- file: src=/etc/uwsgi/apps-available/ideascube.ini dest=/etc/uwsgi/vassals/ideascube.ini state=link
  notify: restart uwsgi

- tasks:
  include: ../../../post_tasks.yml task=ideascube version={{ version }}