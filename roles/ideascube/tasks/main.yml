---
- name: Test if package is already installed 
  shell: dpkg-query -W  ideascube  | awk '{print $2}' ; echo
  register: ideascube_version

- debug: msg="ideascube version {{ ideascube_version.stdout }}"

- name: Install all requiered package
  apt: name={{ item }} state=latest
  with_items:
   - python-networkmanager
   - network-manager

- name: Create entry to clone/pull git repository
  copy: src=nm-dispatcher dest=/etc/NetworkManager/dispatcher.d/ansiblePullUpdate owner=root group=root mode=0755

- name: Config file for network-manager
  copy: src=NetworkManager.conf dest=/etc/NetworkManager/NetworkManager.conf owner=root group=root mode=0755

# For ARM

- name: Create storage dir for ideascube
  file: path=/media/hdd/ideascube/storage/main state=directory owner={{ username }} group={{ username }}
  become: yes
  become_user: ideascube
  when: ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' and ideascube_version.stdout == ""

- name: Copy ideascube package
  get_url: url={{filer_bsf}}/ideascube_{{ version }}_armhf.deb dest=/tmp/ideascube_{{ version }}_armhf.deb owner=root group=root mode=755
  when: ansible_architecture == "armhf" or ansible_architecture == "armv7l" and ideascube_version.stdout|int <= "{{ version }}"

- name: install ideascube package
  apt: deb=/tmp/ideascube_{{ version }}_armhf.deb state=present
  when: ansible_architecture == "armhf" or ansible_architecture == "armv7l" and ideascube_version.stdout|int <= "{{ version }}"

# For AMD64

- name: Copy ideascube package
  get_url: url={{filer_bsf}}/ideascube_{{ version }}_amd64.deb dest=/tmp/ideascube_{{ version }}_amd64.deb owner=root group=root mode=755
  when: ansible_architecture == 'x86_64' and ideascube_version.stdout|int <= "{{ version }}"

- name: install ideascube package
  apt: deb=/tmp/ideascube_{{ version }}_amd64.deb state=present
  when: ansible_architecture == 'x86_64' and ideascube_version.stdout|int <= "{{ version }}"

# Add settings and conf

- name: Fix rights
  file: path=/var/ideascube/ state=directory owner={{ username }} group={{ username }} recurse=yes
  when: ideascube_version.stdout == ""

- name: Adapt STORAGE_ROOT for Nginx
  replace: dest=/etc/nginx/sites-available/ideascube regexp='/var/ideascube/main/media/' replace='/media/hdd/ideascube/storage/main/media/' backup=yes
  when: ansible_architecture == "armhf" or ansible_architecture == "armv7l" and  ideascube_version.stdout == ""

- name: Adapt STORAGE_ROOT for Nginx
  replace: dest=/etc/nginx/sites-available/ideascube regexp='/var/ideascube/static/' replace='/media/hdd/ideascube/storage/static/' backup=yes
  when: ansible_architecture == "armhf" or ansible_architecture == "armv7l" and  ideascube_version.stdout == ""

- name: Add IDEASCUBE_ID
  lineinfile: dest=/etc/default/ideascube
              regexp='^'
              line='IDEASCUBE_ID={{ ideascube_id }}'
              state=present
  when: ideascube_version.stdout == ""

- lineinfile: dest=/etc/nginx/sites-available/ideascube regexp='443' state=absent
  notify: restart nginx
  when: ideascube_version.stdout == ""

- name: Create simLink
  file: src=/etc/uwsgi/apps-available/ideascube.ini dest=/etc/uwsgi/apps-enabled/ideascube.ini state=link
  when: ideascube_version.stdout == ""

- name: Set up the custom Policy Kit actions
  copy: src=org.bsf.ideascube.policy dest=/usr/share/polkit-1/actions/org.bsf.ideascube.policy owner=root group=root mode=644
  when: ideascube_version.stdout == ""

- name: Set up the Policy Kit authorizations
  copy: src={{ item }} dest=/var/lib/polkit-1/localauthority/20-org.d/{{ item }} owner=root group=root mode=644
  with_items:
  - ideascube-networkmanager.pkla
  - ideascube-systemd.pkla
  when: ideascube_version.stdout == ""
  ignore_errors: yes

- name: Add the PAM service
  copy: src=ideascube.pam dest=/etc/pam.d/ideascube owner=root group=root mode=644
  when: ideascube_version.stdout == ""

# # Should be already packaged !!!
# - name: Install libjpeg-dev
#   apt: name=libjpeg-dev state=latest

# # Should be already packaged !!!
# - name: Install Pillow
#   pip: name=Pillow

- name: Ideascube collectstatic
  become: yes
  become_user: ideascube
  shell: ideascube collectstatic --noinput
  when: ansible_architecture == "armhf" or ansible_architecture == "armv7l" and  ideascube_version.stdout == ""

- name: Ideascube migrate
  become: yes
  become_user: ideascube
  shell: ideascube migrate
  notify: restart uwsgi
  when: ansible_architecture == "armhf" or ansible_architecture == "armv7l" and  ideascube_version.stdout == ""

- name: Download CSV to import
  get_url: url={{filer_bsf}}/KB_Liste_contenus_videos+fiches.csv dest=/media/hdd/IdeasServerContent/videos/KB_Liste_contenus_videos+fiches.csv
  when: ansible_architecture == "armhf" or ansible_architecture == "armv7l" and  ideascube_version.stdout == "" and import_ideascube_data == True

- name: Import data 
  become: yes
  become_user: ideascube
  shell: ideascube import_medias /media/hdd/IdeasServerContent/videos/KB_Liste_contenus_videos+fiches.csv
  when: ansible_architecture == "armhf" or ansible_architecture == "armv7l" and  ideascube_version.stdout == "" and import_ideascube_data == True

- tasks:
  include: ../../../post_tasks.yml task=ideascube version={{ version }}
  when: ideascube_version.stdout <= "{{ version }}"
