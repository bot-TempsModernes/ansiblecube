---
- include_vars: group_vars/{{ ansible_architecture }}.yml
  tags: ['custom', 'update']

- name: Ensure kalite is stopped if service exist
  become: yes
  become_user: ideascube
  command: kalite stop
  tags: ['custom', 'update']
  ignore_errors: yes

- name: Wait for the service Kalite to be completly started
  wait_for: port=8008 state=stopped timeout=120
  tags: ['custom', 'update']

- name: Install kalite
  pip: name=ka-lite version={{ ansible_local.device_list[generic_project_name].kalite.version }}
  tags: ['custom', 'update']

- name: Initialize ka-lite
  become: yes
  become_user: ideascube
  command: kalite start
  tags:
    - custom

- name: Wait for the service Kalite to be completly started
  wait_for: port=8008 state=started
  tags:
    - custom

- name: Stop kalite
  become: yes
  become_user: ideascube
  command: kalite stop
  tags:
    - custom

- name: Wait for the service Kalite to be completly started
  wait_for: port=8008 state=stopped timeout=120
  tags:
    - custom

- name: Include task nedeed when using an external hard drive
  include: ext_hdd.yml
  when: (ansible_architecture == "armhf" or ansible_architecture == "armv7l")
    and ansible_devices.sda.partitions.sda1 is defined
  tags:
    - custom

- name: Copy nginx vhost
  template: src=kalite.vhost.j2 dest=/etc/nginx/sites-available/kalite
  tags:
    - custom

- name: Nginx enable Virtual host
  file: src=/etc/nginx/sites-available/kalite dest=/etc/nginx/sites-enabled/kalite state=link
  notify: restart nginx
  tags:
    - custom

- name: Setup startup file
  template: src=kalite.j2 dest=/etc/init.d/kalite owner=root group=root mode="u+x"
  tags:
    - custom

- name: Enable service kalite
  service: name=kalite enabled=yes
  tags:
    - custom

- name: Verify if contentpack has been already downloaded
  stat: path=/home/{{ username }}/.kalite/locale/{{ ansible_local.device_list[generic_project_name].kalite.language }}
  register: p
  tags:
    - custom
  
- name: Download Kalite language pack asynchronously
  become: yes
  become_user: ideascube
  command: kalite manage retrievecontentpack download {{ ansible_local.device_list[generic_project_name].kalite.language }}
  when: p.stat.isdir is defined and p.stat.isdir == False
  async: 1800
  poll: 0
  tags:
    - custom

- name: Import Kalite videos if managed by bsf
  include: import_videos.yml
  when: ansible_local.installed_software.management.managed_by_bsf|bool == True
  tags:
    - custom

- name: Start Kalite
  become: yes
  become_user: ideascube
  command: kalite start 
  tags: ['custom', 'update']